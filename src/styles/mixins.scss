// mixins.scss

// Mixin for flexbox centering
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

// Mixin for responsive typography
@mixin responsive-font($minSize, $maxSize, $minViewportWidth: 320px, $maxViewportWidth: 1200px) {
  font-size: $minSize;
  @media screen and (min-width: $minViewportWidth) {
    font-size: calc(#{$minSize} + #{strip-unit($maxSize - $minSize)} * ((100vw - #{$minViewportWidth}) / #{strip-unit($maxViewportWidth - $minViewportWidth)}));
  }
  @media screen and (min-width: $maxViewportWidth) {
    font-size: $maxSize;
  }
}

// Mixin for media queries
@mixin media($width, $type: max) {
  @if $type == max {
    @media only screen and (max-width: $width) {
      @content;
    }
  } @else if $type == min {
    @media only screen and (min-width: $width) {
      @content;
    }
  }
}

// Mixin for button styles
@mixin button-styles($bg-color: $interactive-color, $text-color: $text-light) {
  background-color: $bg-color;
  color: $text-color;
  border: $border-width-thin solid $bg-color;
  border-radius: $border-radius-sm;
  padding: $spacing-sm $spacing-md;
  font-family: inherit;
  font-size: $font-size-base;
  cursor: pointer;
  transition: all $transition-duration-medium $transition-timing-function;

  &:hover, &:focus {
    background-color: lighten($bg-color, 10%);
    border-color: lighten($bg-color, 10%);
    outline: none;
  }
  &:active {
    background-color: darken($bg-color, 10%);
    border-color: darken($bg-color, 10%);
  }
}

// Mixin for box shadow
@mixin box-shadow($level: 1) {
  @if $level == 1 {
    box-shadow: $shadow-sm;
  } @else if $level == 2 {
    box-shadow: $shadow-md;
  } @else if $level == 3 {
    box-shadow: $shadow-lg;
  }
}

// Mixin for creating a clearfix
@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

// Helper function to strip units from numbers (useful for calculations in mixins)
@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

// Mixin for animations
@mixin animation($name, $duration, $timing-function: ease, $delay: 0s, $iteration-count: 1, $direction: normal) {
  animation-name: $name;
  animation-duration: $duration;
  animation-timing-function: $timing-function;
  animation-delay: $delay;
  animation-iteration-count: $iteration-count;
  animation-direction: $direction;
}

// Mixin for gradient background
@mixin gradient-background($start-color, $end-color, $angle: 45deg) {
  background: $start-color;
  background: -webkit-linear-gradient($angle, $start-color, $end-color);
  background: -o-linear-gradient($angle, $start-color, $end-color);
  background: -moz-linear-gradient($angle, $start-color, $end-color);
  background: linear-gradient($angle, $start-color, $end-color);
}